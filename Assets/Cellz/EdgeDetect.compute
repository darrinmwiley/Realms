// EdgeDetect.compute
#pragma kernel CSMain

Texture2D<uint>      IDTex     : register(t0);
StructuredBuffer<float4> CellColors : register(t1);
float4               borderColor;
float4               bgColor;
int2                 texSize;

RWTexture2D<float4>  OutputTex : register(u0);

[numthreads(8,8,1)]
void CSMain(uint3 pid : SV_DispatchThreadID)
{
    int2 p = pid.xy;
    if (p.x >= texSize.x || p.y >= texSize.y) return;

    uint myID = IDTex[p];
    float4 myCol = (myID == 0) ? bgColor : CellColors[myID];

    bool edge = false;
    int2 offsets[4] = { int2(-1,0), int2(1,0), int2(0,-1), int2(0,1) };
    for (int i = 0; i < 4; i++)
    {
        int2 q = p + offsets[i];
        uint nid = (q.x < 0||q.y<0||q.x>=texSize.x||q.y>=texSize.y) ? 0 : IDTex[q];
        if (nid != myID) { edge = true; break; }
    }

    OutputTex[p] = edge ? borderColor : myCol;
}
